{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/app/component/home/addeditorder/addeditorder.component.css","webpack:///./src/app/component/home/addeditorder/addeditorder.component.html","webpack:///./src/app/component/home/addeditorder/addeditorder.component.ts","webpack:///./src/app/component/home/home.component.css","webpack:///./src/app/component/home/home.component.html","webpack:///./src/app/component/home/home.component.ts","webpack:///./src/app/component/home/listorder/listorder.component.css","webpack:///./src/app/component/home/listorder/listorder.component.html","webpack:///./src/app/component/home/listorder/listorder.component.ts","webpack:///./src/app/component/user/login/login.component.css","webpack:///./src/app/component/user/login/login.component.html","webpack:///./src/app/component/user/login/login.component.ts","webpack:///./src/app/component/user/register/register.component.css","webpack:///./src/app/component/user/register/register.component.html","webpack:///./src/app/component/user/register/register.component.ts","webpack:///./src/app/component/user/user.component.css","webpack:///./src/app/component/user/user.component.html","webpack:///./src/app/component/user/user.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/shared_service/product.service.ts","webpack:///./src/app/shared_service/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"  <router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './component/user/register/register.component';\nimport { LoginComponent } from './component/user/login/login.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UserComponent } from './component/user/user.component';\nimport { HomeComponent } from './component/home/home.component';\nimport {appRoutes} from './routes';\nimport { UserService } from './shared_service/user.service';\nimport { AuthGuard } from './auth/auth.guard';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { ListorderComponent } from './component/home/listorder/listorder.component';\nimport { AddeditorderComponent } from './component/home/addeditorder/addeditorder.component';\nimport { ProductService } from './shared_service/product.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    UserComponent,\n    HomeComponent,\n    ListorderComponent,\n    AddeditorderComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [UserService,AuthGuard,{\n    provide:HTTP_INTERCEPTORS,\n    useClass:AuthInterceptor,\n    multi:true\n  }, ProductService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router:Router){\n\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    if(localStorage.getItem('userToken')!=null)\n      return true;\n    this.router.navigate(['/login']);\n      return false;\n  }\n}\n","import {HttpInterceptor, HttpRequest, HttpHandler, HttpEvent} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {Observable} from \"rxjs\";\r\nimport {tap} from \"rxjs/operators\";\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor{\r\n    constructor(private router:Router){\r\n\r\n    }\r\n\r\n    intercept(req:HttpRequest<any>,next:HttpHandler):Observable<HttpEvent<any>>{\r\n        console.log(\"inside auth interceptor :\"+ req.headers.get('No-Auth'));\r\n        if(req.headers.get('No-Auth')==\"true\")\r\n            return next.handle(req.clone());\r\n        if(localStorage.getItem('userToken')!= null){\r\n                const clonedreq = req.clone({\r\n                    headers:req.headers.set(\"Authorization\",\"Bearer \"+ localStorage.getItem('userToken'))\r\n                });\r\n                \r\n                return next.handle(clonedreq).pipe(\r\n                            tap(\r\n                                succ=> {},\r\n                                err=>{\r\n                                    //debugger;\r\n                                    console.log(\"I'm Here\");\r\n                                    if(err.status==401)\r\n                                        this.router.navigate(['/login']);\r\n                                }\r\n                            ));\r\n            }\r\n            else{\r\n                this.router.navigate(['/login']);\r\n            }\r\n\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n<h2 *ngIf=\\\"!isOrderAdded\\\">Add Order</h2>\\n<h2 *ngIf=\\\"isOrderAdded\\\">Edit Order <strong>{{order.orderId}}</strong> for <strong></strong>{{order.customerName}}</h2>\\n<div class=\\\"tab-pane active in\\\" >\\n    <form class=\\\"form-horizontal\\\" #addorderForm=\\\"ngForm\\\" class=\\\"form-horizontal col s12 white\\\" (ngSubmit)=\\\"addOrder()\\\">\\n\\n            <div *ngIf=\\\"!isOrderAdded\\\" class=\\\"form-group input-field col s6\\\">\\n                    <label for=\\\"customer\\\">Customer Name</label>\\n                    <input [(ngModel)]=\\\"customer\\\" name=\\\"cust\\\" class=\\\"form-control\\\" required>\\n            </div> \\n            <div class=\\\"form-group input-field col s6\\\">\\n            <label for=\\\"product\\\">Product</label>\\n              <select [(ngModel)]=\\\"selectedProduct\\\" name=\\\"prod\\\" class=\\\"form-control\\\" required>\\n                  <option *ngFor=\\\"let product of products\\\" [ngValue]=\\\"product\\\">\\n                       {{product.productName}} (${{product.unitPrice}}) \\n                  </option>\\n            </select>\\n            </div>\\n            <div class=\\\"form-group input-field col s6\\\">\\n            <label for=\\\"qty\\\">Quantity</label>\\n            <input [(ngModel)]=\\\"quantity\\\" name=\\\"quantity\\\" class=\\\"form-control\\\" required>\\n            </div>        \\n           <div class=\\\"form-group\\\">\\n                <!-- Button -->\\n                  <button [disabled]=\\\"!addorderForm.valid\\\" class=\\\"btn btn-success\\\">Add</button>\\n           </div>\\n    </form>\\n</div>\\n<br/>\\n<div  *ngIf=\\\"isOrderDetailAdded\\\">\\n    <h2>Orders Details</h2>\\n    <table class=\\\"table table-striped\\\">\\n        <thead class=\\\"thead-light\\\">\\n            <tr>\\n            <th scope=\\\"col\\\">Order Detail ID</th>\\n            <th scope=\\\"col\\\">Product</th>\\n            <th scope=\\\"col\\\">Quantity</th>\\n            <th scope=\\\"col\\\">Line Price</th>        \\n            <th scope=\\\"col\\\">Order Line Status</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"let orderdetail of orderdetaillist\\\" >\\n                    <td>{{orderdetail.orderDetailId}}</td>\\n                    <td>{{orderdetail.product.productName}}</td>\\n                    <td>{{orderdetail.quantity}}</td>\\n                    <td>${{orderdetail.linePrice}}</td>          \\n                    <td>{{orderdetail.orderDetailStatus}}</td>\\n            </tr>      \\n        </tbody>\\n    </table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Product } from '../../../product';\nimport { ProductService } from '../../../shared_service/product.service';\nimport { UserService } from '../../../shared_service/user.service';\nimport { Order } from '../../../order';\nimport { Orderdetail } from '../../../orderdetail';\nimport { Neworderdetail } from '../../../neworderdetail';\n\n@Component({\n  selector: 'app-addeditorder',\n  templateUrl: './addeditorder.component.html',\n  styleUrls: ['./addeditorder.component.css']\n})\nexport class AddeditorderComponent implements OnInit {\n  private products:any;\n  isOrderAdded:boolean=false;\n  isOrderDetailAdded:boolean=false;\n  private selectedProduct:Product;\n  private orderId:Number;\n  order:any;\n  private customer:String;\n  private quantity:Number;\n  private neworderdetail:Neworderdetail;  \n  private orderdetaillist:any[]=[];\n  constructor(private _productService:ProductService, private _userService:UserService) { }\n\n  ngOnInit() {\n    //this.selectedProduct = {\"productId\":null,\"productName\":null,\"unitPrice\":null};\n    this._productService.getProducts().subscribe((res)=>{\n      this.products=res;\n      console.log(this.products);\n      if(this.products.size>0){\n        //this.selectedProduct=this.products[0];\n      }\n    });\n  }\n  addOrder(){\n    console.log(this.selectedProduct);\n    if(this.order==null)\n    {\n      this._userService.addOrder(this.customer).subscribe((res)=>{\n        this.order = res;\n        this.isOrderAdded=true;\n        console.log(\"RP1\");\n        console.log(this.order);\n        this.addOrderDetail();\n      },(err)=>{});\n    }\n    else\n    {\n      this.addOrderDetail();\n    }\n  }\n  addOrderDetail(){\n    this.neworderdetail = {\n      quantity:this.quantity,\n      product:this.selectedProduct\n    }\n    this._userService.addOrderDetail(this.order.orderId,this.neworderdetail).subscribe((res)=>{\n      //this.order = res;\n      this.orderdetaillist.push(res);\n      this.isOrderDetailAdded=true;      \n      console.log(\"RP2\");\n      console.log(this.order);\n    },(err)=>{})\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-inverse\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#myNavbar\\\">\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>                        \\n        </button>\\n        <a class=\\\"navbar-brand\\\" routerLink='/home'>Coffee Shop</a>\\n      </div>\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"myNavbar\\\">\\n        <ul class=\\\"nav navbar-nav\\\">\\n          <li routerLinkActive='active'><a routerLink='/home' >Home</a></li>\\n          <li routerLinkActive='active'><a routerLink='/home/addorder'>Add Order</a></li>\\n        </ul>\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n          <li><a (click)=\\\"Logout()\\\"><span class=\\\"glyphicon glyphicon-log-out\\\"></span> Logout</a></li>\\n        </ul>\\n      </div>\\n    </div>\\n  </nav>\\n    \\n  <div class=\\\"container\\\">    \\n    <router-outlet></router-outlet>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport { User } from '../../user';\nimport { UserService } from '../../shared_service/user.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  user:any;\n\n  constructor(private router:Router,private _userService:UserService) { }\n\n  ngOnInit() {\n    this._userService.getCurrentUser().subscribe((res:any)=>{\n    this.setUser(res);\n  },\n    (err:any)=>{\n\n    })  \n  }\n  Logout(){\n    localStorage.removeItem('userToken');    \n    this.router.navigate(['/login']);\n  }\n\n  setUser(user:User){\n    this.user = user;\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \" <h2 >Active Orders</h2>\\n  <table class=\\\"table table-striped\\\">\\n    <thead class=\\\"thead-light\\\">\\n      <tr>\\n        <th scope=\\\"col\\\">Order Id</th>\\n        <th scope=\\\"col\\\">Customer Name</th>\\n        <th scope=\\\"col\\\">Order Price</th>\\n        <th scope=\\\"col\\\">Order Time</th>        \\n        <th scope=\\\"col\\\">Order Status</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let order of pendingOrders\\\" >\\n              <td>{{order.orderId}}</td>\\n              <td>{{order.customerName}}</td>\\n              <td>{{order.orderTotalPrice}}</td>\\n              <td>{{order.orderTimeStamp}}</td>          \\n              <td>{{order.orderStatus}}</td>\\n        </tr>      \\n    </tbody>\\n  </table>\\n\\n  <h2>Completed Orders</h2>\\n  <table class=\\\"table table-striped\\\">\\n    <thead class=\\\"thead-light\\\">\\n      <tr>\\n        <th scope=\\\"col\\\">Order Id</th>\\n        <th scope=\\\"col\\\">Customer Name</th>\\n        <th scope=\\\"col\\\">Order Price</th>\\n        <th scope=\\\"col\\\">Order Time</th>        \\n        <th scope=\\\"col\\\">Order Status</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let order of completedOrders\\\" >\\n              <td>{{order.orderId}}</td>\\n              <td>{{order.customerName}}</td>\\n              <td>{{order.orderTotalPrice}}</td>\\n              <td>{{order.orderTimeStamp}}</td>          \\n              <td>{{order.orderStatus}}</td>\\n        </tr>      \\n    </tbody>\\n  </table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../../shared_service/user.service';\nimport {Order} from '../../../order';\n\n@Component({\n  selector: 'app-listorder',\n  templateUrl: './listorder.component.html',\n  styleUrls: ['./listorder.component.css']\n})\nexport class ListorderComponent implements OnInit {\n  orders:any;\n  pendingOrders:any;\n  completedOrders:any;\n  constructor(private _userService:UserService) { }\n\n  ngOnInit() {\n    this._userService.getOrders().subscribe((res)=>{\n      this.orders=res;\n      console.log(this.orders);\n      this.pendingOrders=this.orders.filter(order => order.orderStatus ==='pending');\n      \n      this.completedOrders=this.orders.filter(order => order.orderStatus ==='complete');\n      \n      console.log(this.pendingOrders);\n    },(err)=>{});\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"tab-pane active in\\\" >\\n    <form #loginForm=\\\"ngForm\\\" class=\\\"form-horizontal col s12 white\\\" (ngSubmit)=\\\"OnSubmit(UserName.value,Password.value)\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"form-group input-field col s12\\\">\\n          <!-- Username -->\\n          <label for=\\\"username\\\">Username</label>\\n            <input type=\\\"text\\\" #UserName ngModel name=\\\"username\\\" placeholder=\\\"User Name\\\" class=\\\"form-control\\\" required>\\n         </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"form-group input-field col s12\\\">\\n          <!-- Password-->\\n          <label for=\\\"password\\\">Password</label>\\n            <input type=\\\"password\\\" #Password ngModel name=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\" required>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">    \\n        <div class=\\\"form-group\\\">\\n          <!-- Button -->\\n            <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success\\\">Login</button>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"isLoginError\\\" class=\\\"alert alert-danger\\\">\\n          <strong>Error!</strong> {{LoginError}}\\n        </div>\\n    </form>                \\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\nimport {UserService} from '../../../shared_service/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  private user:any={};\n  isLoginError: boolean=false;\n  LoginError:string=\"\";\n\n  constructor(private _userService:UserService, private router:Router) { }\n\n  ngOnInit() {\n    if(localStorage.getItem('userToken')!=null){\n      //When token available, try route to Home Page\n      this.router.navigate(['/home']);\n    }\n\n  }\n\n  OnSubmit(userName, password){  \n    this._userService.login(userName, password).subscribe(\n      (res:any)=>{\n          this.isLoginError=false;\n          console.log(res.token);\n          localStorage.setItem('userToken',res.token);\n          this.router.navigate(['/home']);    \n    },\n      (err:any)=>{\n        this.isLoginError=true;\n        this.LoginError = \"Invalid Credentials\";\n      })  \n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"tab-pane active in\\\" >\\n    <form class=\\\"form-horizontal\\\" #registerForm=\\\"ngForm\\\" class=\\\"form-horizontal col s12 white\\\" (ngSubmit)=\\\"OnRegister()\\\">\\n        <div *ngIf=\\\"isRegisterError\\\" class=\\\"alert alert-danger\\\">\\n            <strong>Error!</strong> {{RegisterMessage}}\\n          </div>\\n          \\n        <div *ngIf=\\\"isRegisterSuccess\\\" class=\\\"alert alert-success\\\">\\n            <strong>Success!</strong> {{RegisterMessage}}\\n          </div>\\n        <div class=\\\"form-group\\\">\\n            <!-- Username -->\\n            <label for=\\\"username\\\">Username</label>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"user.userName\\\" name=\\\"userName\\\" placeholder=\\\"User Name\\\" class=\\\"form-control\\\">\\n           </div>\\n  \\n          <div class=\\\"form-group\\\">\\n            <!-- Password-->\\n            <label for=\\\"userPassword\\\">Password</label>\\n              <input type=\\\"password\\\" [(ngModel)]=\\\"user.userPassword\\\" name=\\\"userPassword\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\">\\n          </div>\\n          \\n          <div class=\\\"form-group\\\">\\n              <!-- Confirm Password-->\\n              <label for=\\\"confirmPassword\\\">Confirm Password</label>\\n                <input type=\\\"password\\\" [(ngModel)]=\\\"user.userConfirmPassword\\\" name=\\\"userConfirmPassword\\\" placeholder=\\\"Confirm Password\\\" class=\\\"form-control\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <!-- DOB -->\\n                <label for=\\\"dob\\\">Date of Birth</label>\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"user.DOB\\\" name=\\\"DOB\\\" placeholder=\\\"YYYY-MM-DD\\\" class=\\\"form-control\\\">\\n               </div>\\n      <div>\\n        <button class=\\\"btn btn-primary\\\">Create Account</button>\\n      </div>\\n      \\n    </form>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport {FormsModule, NgForm} from '@angular/forms';\nimport { User } from '../../../user';\nimport { Registeruser } from '../../../registeruser';\nimport { UserService } from '../../../shared_service/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  private user:Registeruser;\n  isRegisterError:boolean = false;\n  isRegisterSuccess:boolean = false;\n  RegisterMessage:string=\"\";\n  constructor(private _userService:UserService) { \n  }\n\n  ngOnInit() {\n    this.resetForm();\n  }\n  OnRegister(){\n    if(this.user.userPassword==this.user.userConfirmPassword){\n      this.isRegisterError=false;\n      this._userService.registerUser(this.user).subscribe((res)=>{\n        this.isRegisterSuccess=true;\n        this.RegisterMessage=\"User registration Successfull\";\n        console.log(res);\n        setTimeout(() => {\n          this.isRegisterSuccess = false;\n          this.RegisterMessage=\"\";\n        }, 5000);\n      },(err)=>{\n        this.isRegisterError = true;\n        this.RegisterMessage = err;\n      });\n\n    }\n    else\n    {\n      this.isRegisterError = true;\n      this.RegisterMessage = \"Please enter same password in password and confirm password field\"\n\n    }\n\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null)\n      form.reset();\n    this.user = {\n      userName: '',\n      userPassword: '',\n      userConfirmPassword: '',\n      DOB: ''\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<div class=\\\"row\\\">\\n        <div class=\\\"span12\\\">\\n    \\t\\t<div class=\\\"\\\" id=\\\"loginModal\\\">\\n              <div class=\\\"modal-header\\\">\\n                <h3>Coffee Shop</h3>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                  <ul class=\\\"nav nav-tabs\\\">\\n                    <li routerLinkActive='active'><a routerLink='/login' >Login</a></li>\\n                    <li routerLinkActive='active'><a routerLink='/register'>Register</a></li>\\n                  </ul>\\n                  <div class=\\\"tab-content\\\">\\n                    <router-outlet></router-outlet>\\n                  </div>\\n              </div>\\n            </div>\\n        </div>\\n  </div>\\n</div>  \\n  \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Routes } from \"@angular/router\";\r\nimport {HomeComponent} from './component/home/home.component';\r\nimport {UserComponent} from './component/user/user.component';\r\nimport {LoginComponent} from './component/user/login/login.component';\r\nimport {RegisterComponent} from './component/user/register/register.component';\r\nimport { AuthGuard } from \"./auth/auth.guard\";\r\nimport { ListorderComponent } from \"./component/home/listorder/listorder.component\";\r\nimport { AddeditorderComponent } from \"./component/home/addeditorder/addeditorder.component\";\r\n\r\n\r\nexport const appRoutes: Routes = [\r\n    { path:'home', component:HomeComponent, canActivate:[AuthGuard],\r\n        children:[{path:'', component:ListorderComponent, canActivate:[AuthGuard]}]    \r\n    },\r\n    { path:'home', component:HomeComponent, canActivate:[AuthGuard],\r\n    children:[{path:'addorder', component:AddeditorderComponent, canActivate:[AuthGuard]}]    \r\n    },\r\n    { path:'login', component:UserComponent,\r\n        children:[{path:'', component:LoginComponent}]\r\n    },\r\n    { path:'register', component:UserComponent,\r\n        children:[{path:'', component:RegisterComponent}]\r\n    },\r\n    { path:'',redirectTo:'login', pathMatch:'full'}\r\n];","import { Injectable } from '@angular/core';\nimport{HttpClient, HttpResponse, HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  \n  private baseUrl:string='http://localhost:8080';\n  private authheaders = new HttpHeaders({'Content-Type':'application/json'});\n\n  constructor(private _http:HttpClient) { }\n\n  getProducts(){\n    return this._http.get(this.baseUrl+'/api/secured/products',{headers:this.authheaders});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport{HttpClient, HttpResponse, HttpHeaders} from '@angular/common/http';\n\nimport {User} from '../user';\nimport { Registeruser } from '../registeruser';\nimport { Order } from '../order';\nimport { Neworderdetail } from '../neworderdetail';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private baseUrl:string='http://localhost:8080';\n  private noAuthheaders = new HttpHeaders({'Content-Type':'application/json','No-Auth':'true'});  \n  private authheaders = new HttpHeaders({'Content-Type':'application/json'});\n\n  constructor(private _http:HttpClient) { }\n\n  getUsers(){\n    return this._http.get(this.baseUrl+'/api/secured/users',{headers:this.noAuthheaders});\n  }\n\n  getCurrentUser(){\n    return this._http.get(this.baseUrl+'/api/secured/currentuser',{headers:this.authheaders});\n  }\n\n  getOrders(){\n    return this._http.get(this.baseUrl+'/api/secured/myorders',{headers:this.authheaders});\n  }\n\n  registerUser(user:Registeruser){\n    return this._http.post(this.baseUrl+'/api/signup',JSON.stringify(user),{headers:this.noAuthheaders});\n  }\n\n  addOrder(customerName:String){\n    const newOrder = \"{\\\"customerName\\\":\\\"\"+customerName+\"\\\",\\\"orderTimeStamp\\\":\\\"\"+this.formatDate(new Date()) +\"\\\"}\";\n    return this._http.post(this.baseUrl+'/api/secured/order',newOrder,{headers:this.authheaders});\n  }\n\n  addOrderDetail(orderId:Number,newOrderDetail:Neworderdetail){\n    console.log(\"add order detail\");\n    return this._http.post(this.baseUrl+'/api/secured/order/'+orderId+'/orderdetails',JSON.stringify(newOrderDetail),{headers:this.authheaders});\n  }\n  \n\n  login(un:string, ps:string){\n    const data = \"{\\\"userName\\\":\\\"\"+un+\"\\\",\\\"userPassword\\\":\\\"\"+ps+\"\\\"}\";\n    return this._http.post(this.baseUrl+'/api/login', data, {headers:this.noAuthheaders});\n  }\n\n  formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}